parameters:
- name: resourceGroupName
  displayName: Resource Group
  type: string
- name: registryConnId
  displayName: Container Registry Connection
  type: string

trigger: none

resources:
- repo: self

variables:
  prefix: 'dlpg'
  deploymentName: 'DeployTunnelingApp'
  appInsightsName: $(prefix)-app-insights
  containerRegistryName: $(prefix)ContainerRegistry
  containerAppEnvName: $(prefix)-container-app-env
  containerAppName: 'dlpgs-tunneling-api'
  logAnalyticsWorkspaceName: $(prefix)-log-analytics
  userIdentityName: 'dlpgs-tunneling-api-identity'
  dockerRegistryServiceConnection: '${{ parameters.registryConnId }}'
  imageRepository: 'dlpgs-tunneling-api'
  containerRegistry: 'dlpgContainerRegistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/src/Dockerfile'
  resourceGroup: ${{ parameters.resourceGroupName }}
  templateFile: './iac/core/container-app-env.bicep'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest

    - task: AzureCLI@2
      name: ContainerApp
      displayName: Deploy to Container App
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        useGlobalConfig: false
        inlineScript: |
          az deployment group create --name $(deploymentName) --resource-group ${{ parameters.resourceGroupName }} --template-file $(templateFile) --parameters 'containerAppEnvironmentName=$(containerAppEnvName)' 'containerAppName=$(containerAppName)' 'userIdentityName=$(userIdentityName)' 'containerRegistryName=$(containerRegistryName)' 'logAnalyticsName=$(logAnalyticsWorkspaceName)' 'appInsightsName=$(appInsightsName)' 'location=${{ lower(parameters.location) }}'
parameters:
- name: resourceGroupName
  displayName: Resource Group
  type: string
- name: registryConnId
  displayName: Container Registry Connection
  type: string

trigger: none

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '${{ parameters.registryConnId }}'
  imageRepository: 'dlpgs-tunneling-api'
  containerRegistry: 'dlpgContainerRegistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/src/Dockerfile'
  resourceGroup: ${{ parameters.resourceGroupName }}
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          latest

    - task: AzureContainerApps@1
      displayName: Deploy to Container App
      inputs:      
        azureSubscription: 'Dalapagos subscription'
        acrName: 'dlpgContainerRegistry'
        imageToDeploy: 'dlpgContainerRegistry.azurecr.io/dlpgs-tunneling-api:latest'
        containerAppName: 'dlpgs-tunneling-api'
        resourceGroup: '$(resourceGroup)'
        containerAppEnvironment: 'dlpg-container-app-env'
parameters:
- name: location
  displayName: Location
  type: string
- name: resourceGroupName
  displayName: Resource Group
  type: string

trigger: none

name: DeployTunnelingInfra

variables:
  prefix: 'dlpg'
  deploymentName: 'DeployTunnelingInfra'
  keyVaultName: $(prefix)-key-vault
  logAnalyticsWorkspaceName: $(prefix)-log-analytics
  appInsightsName: $(prefix)-app-insights
  containerRegistryName: $(prefix)ContainerRegistry
  containerAppEnvName: $(prefix)-container-app-env
  azureServiceConnection: 'DalapagosServiceP'
  sqlServerName: $(prefix)-sql-server
  sqlPasswordName: 'sql-password'
  sqlDBName: 'DalapagosTunnelingDb'
  templateFile: './iac/core/main.bicep'

pool:
  vmImage: 'windows-latest'

steps:
- task: AzureCLI@2
  name: GenDbConnection
  displayName: Create DB Connection String
  inputs:
    azureSubscription: $(azureServiceConnection)
    scriptType: bash
    scriptLocation: inlineScript
    useGlobalConfig: false
    inlineScript: |
      SQLPASS="$(cat /dev/urandom | tr -dc 'A-Za-z0-9_!@#$%^&*()\-+=' | head -c24)"
      echo "##vso[task.setvariable variable=SqlPass;isOutput=true]$SQLPASS"
  
- task: AzureCLI@2
  name: DeployBicep
  displayName: Create Infrastructure
  inputs:
    azureSubscription: $(azureServiceConnection)
    scriptType: bash
    scriptLocation: inlineScript
    useGlobalConfig: false
    inlineScript: |
      if [ "true" == $(az group exists --name ${{ parameters.resourceGroupName }}) ]; then :; else az group create --name ${{ parameters.resourceGroupName }} --location ${{ parameters.location }}; fi;
      az deployment group create --name $(deploymentName) --resource-group ${{ parameters.resourceGroupName }} --template-file $(templateFile) --parameters 'location=${{ lower(parameters.location) }}' 'logAnalyticsWorkspaceName=$(logAnalyticsWorkspaceName)' 'appInsightsName=$(appInsightsName)' 'containerRegistryName=$(containerRegistryName)' 'containerAppEnvName=$(containerAppEnvName)' 'keyVaultName=$(keyVaultName)' 'sqlServerName=$(sqlServerName)' 'sqlServerPass=$(GenDbConnection.SqlPass)' 'sqlDBName=$(sqlDBName)'

- task: SqlAzureDacpacDeployment@1
  displayName: Execute Azure SQL
  inputs:
    azureSubscription: $(azureServiceConnection)
    ServerName: $(sqlServerName)
    DatabaseName: $(sqlDBName)
    SqlUsername:  'sqladmin'
    SqlPassword:  $(GenDbConnection.SqlPass)
    DacpacFile: './iac/core/DalapagosTunnelsDb.dacpac'